# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

metadata_registry_defaults:
  dataplex:
    projects: <my-gcp-project-id>
    locations: <my-gcp-dataplex-region-id>
    lakes: <my-gcp-dataplex-lake-id>
    zones: <my-gcp-dataplex-zone-id>
row_filters:
  NONE:
    filter_sql_expr: 'True'
  NO_ROWS:
    filter_sql_expr: 'FALSE'
entities:
  INGESTION_TABLE_DAY_LEVEL:
    source_database: BIGQUERY
    table_name: ingestion_day_level
    dataset_name: <my_bigquery_dataset_id>
    project_name: <my-gcp-project-id>
    environment_override:
      TEST:
        environment: test
        override:
          dataset_name: <my_bigquery_dataset_id_2>
          project_name: <my-gcp-project-id-2>
    columns:
      INVOICE_ID:
        name: invoice_id
        data_type: FLOAT
        description: |-
          invoice id
      DATE_OF_DAY:
        name: date_of_day
        data_type: DATE
        description: |-
          ingestion date
  INGESTION_TABLE_MONTH_LEVEL:
    source_database: BIGQUERY
    table_name: ingestion_month_level
    dataset_name: <my_bigquery_dataset_id>
    project_name: <my-gcp-project-id>
    environment_override:
      TEST:
        environment: test
        override:
          dataset_name: <my_bigquery_dataset_id_2>
          project_name: <my-gcp-project-id-2>
    columns:
      CLIENT_CD:
        name: client_cd
        data_type: INTEGER
        description: |-
          client cd
      MONTH_ID:
        name: month_id
        data_type: INTEGER
        description: |-
          month id %y%m
  INGESTION_TABLE_TIMESTAMP_LEVEL:
    source_database: BIGQUERY
    table_name: ingestion_timestamp_level
    dataset_name: <my_bigquery_dataset_id>
    project_name: <my-gcp-project-id>
    environment_override:
      TEST:
        environment: test
        override:
          dataset_name: <my_bigquery_dataset_id_2>
          project_name: <my-gcp-project-id-2>
    columns:
      DANA_INGESTION_TIMESTAMP:
        name: dana_ingestion_timestamp
        data_type: TIMESTAMP
        description: |-
          ingestion timestamp
      SALES_MANAGER_ID:
        name: salesManagerId
        data_type: STRING
        description: |-
          sales manager id
  COMPLEX_RULES_TABLE_OK:
    source_database: BIGQUERY
    table_name: complex_rules_ok
    dataset_name: <my_bigquery_dataset_id>
    project_name: <my-gcp-project-id>
    environment_override:
      TEST:
        environment: test
        override:
          dataset_name: <my_bigquery_dataset_id_2>
          project_name: <my-gcp-project-id-2>
    columns:
      INVOICE_GROSS_TOTAL_AMOUNT:
        name: dInvoiceGrossTotalAmount
        data_type: NUMERIC
        description: |-
          invoice gross total amount
  COMPLEX_RULES_TABLE_NOT_OK:
    source_database: BIGQUERY
    table_name: complex_rules_not_ok
    dataset_name: <my_bigquery_dataset_id>
    project_name: <my-gcp-project-id>
    environment_override:
      TEST:
        environment: test
        override:
          dataset_name: <my_bigquery_dataset_id_2>
          project_name: <my-gcp-project-id-2>
    columns:
      INVOICE_GROSS_TOTAL_AMOUNT:
        name: dInvoiceGrossTotalAmount
        data_type: NUMERIC
        description: |-
          invoice gross total amount
  DIFFERENT_VOLUMES_PER_PERIOD:
    source_database: BIGQUERY
    table_name: different_volumes_per_period
    dataset_name: <my_bigquery_dataset_id>
    project_name: <my-gcp-project-id>
    environment_override:
      TEST:
        environment: test
        override:
          dataset_name: <my_bigquery_dataset_id_2>
          project_name: <my-gcp-project-id-2>
    columns:
      DANA_INGESTION_TIMESTAMP:
        name: dana_ingestion_timestamp
        data_type: TIMESTAMP
        description: |-
          Ingestion Timestamp
rule_bindings:
  T1_NO_DELAYED_INGESTION_DAY_LEVEL_SHOULD_FAIL:
    entity_id: INGESTION_TABLE_DAY_LEVEL
    column_id: INVOICE_ID
    row_filter_id: NONE
    rule_ids:
      - NO_DELAYED_INGESTION_DAY_LEVEL:
          ingestion_date_day: date_of_day
          elapsed_time_days: 1
    metadata:
      brand: one
  T1_NO_DELAYED_INGESTION_DAY_LEVEL_SHOULD_SUCCEED:
    entity_id: INGESTION_TABLE_DAY_LEVEL
    column_id: INVOICE_ID
    row_filter_id: NONE
    rule_ids:
      - NO_DELAYED_INGESTION_DAY_LEVEL:
          ingestion_date_day: date_of_day
          elapsed_time_days: 20
    metadata:
      brand: one
  T2_NO_DELAYED_INGESTION_MONTH_LEVEL_SHOULD_SUCCEED:
    entity_id: INGESTION_TABLE_MONTH_LEVEL
    column_id: CLIENT_CD
    row_filter_id: NONE
    rule_ids:
      - NO_DELAYED_INGESTION_MONTH_LEVEL:
          ingestion_date_month: month_id
          elapsed_time_months: 5
    metadata:
      brand: one
  T2_NO_DELAYED_INGESTION_MONTH_LEVEL_SHOULD_FAIL:
    entity_id: INGESTION_TABLE_MONTH_LEVEL
    column_id: CLIENT_CD
    row_filter_id: NONE
    rule_ids:
      - NO_DELAYED_INGESTION_MONTH_LEVEL:
          ingestion_date_month: month_id
          elapsed_time_months: 0
    metadata:
      brand: one
  T3_NO_DELAYED_INGESTION_TIMESTAMP_LEVEL_SHOULD_SUCCEED:
    entity_id: INGESTION_TABLE_TIMESTAMP_LEVEL
    column_id: SALES_MANAGER_ID
    row_filter_id: NONE
    rule_ids:
      - NO_DELAYED_INGESTION_TIMESTAMP_LEVEL:
          ingestion_timestamp: dana_ingestion_timestamp
          elapsed_time_hours: 10000
    metadata:
      brand: one
  T3_NO_DELAYED_INGESTION_TIMESTAMP_LEVEL_SHOULD_FAIL:
    entity_id: INGESTION_TABLE_TIMESTAMP_LEVEL
    column_id: SALES_MANAGER_ID
    row_filter_id: NONE
    rule_ids:
      - NO_DELAYED_INGESTION_TIMESTAMP_LEVEL:
          ingestion_timestamp: dana_ingestion_timestamp
          elapsed_time_hours: 10
    metadata:
      brand: one
  T4_NO_COMPLEX_RULES_MISMATCH_SHOULD_SUCCEED:
    entity_id: COMPLEX_RULES_TABLE_OK
    column_id: INVOICE_GROSS_TOTAL_AMOUNT
    row_filter_id: NONE
    rule_ids:
      - NO_COMPLEX_RULES_MISMATCH
    metadata:
      brand: one
  T4_NO_COMPLEX_RULES_MISMATCH_SHOULD_FAIL:
    entity_id: COMPLEX_RULES_TABLE_NOT_OK
    column_id: INVOICE_GROSS_TOTAL_AMOUNT
    row_filter_id: NONE
    rule_ids:
      - NO_COMPLEX_RULES_MISMATCH
    metadata:
      brand: one
  T5_NO_DIFFERENT_VOLUMES_PER_SPECIFIC_PERIOD_DAY_SHOULD_FAIL:
    entity_id: DIFFERENT_VOLUMES_PER_PERIOD
    column_id: DANA_INGESTION_TIMESTAMP
    row_filter_id: NONE
    rule_ids:
      - NO_DIFFERENT_VOLUMES_PER_SPECIFIC_PERIOD:
          ts_column: dana_ingestion_timestamp
          as_at_ts: "2021-12-29 00:00:00 UTC"
          interval: day
          threshold: 100
    metadata:
      brand: one
  T5_NO_DIFFERENT_VOLUMES_PER_SPECIFIC_PERIOD_DAY_SHOULD_SUCCEED:
    entity_id: DIFFERENT_VOLUMES_PER_PERIOD
    column_id: DANA_INGESTION_TIMESTAMP
    row_filter_id: NONE
    rule_ids:
      - NO_DIFFERENT_VOLUMES_PER_SPECIFIC_PERIOD:
          ts_column: dana_ingestion_timestamp
          as_at_ts: "2021-12-23 00:00:00 UTC"
          interval: day
          threshold: 100
    metadata:
      brand: one
  T5_NO_DIFFERENT_VOLUMES_PER_SPECIFIC_PERIOD_MONTH_SHOULD_SUCCEED:
    entity_id: DIFFERENT_VOLUMES_PER_PERIOD
    column_id: DANA_INGESTION_TIMESTAMP
    row_filter_id: NONE
    rule_ids:
      - NO_DIFFERENT_VOLUMES_PER_SPECIFIC_PERIOD:
          ts_column: dana_ingestion_timestamp
          as_at_ts: "2021-12-29 00:00:00 UTC"
          interval: month
          threshold: 4000
    metadata:
      brand: one
rules:
  NO_DELAYED_INGESTION_DAY_LEVEL:
    rule_type: CUSTOM_SQL_STATEMENT
    params:
      custom_sql_arguments:
        - ingestion_date_day
        - elapsed_time_days
      custom_sql_statement: |-
        select * from
        (select count(*) as n
          from data a
          where $ingestion_date_day >= date_sub(current_date(), interval $elapsed_time_days day) 
        )
        where n = 0
  NO_DELAYED_INGESTION_MONTH_LEVEL:
    rule_type: CUSTOM_SQL_STATEMENT
    params:
      custom_sql_arguments:
        - ingestion_date_month
        - elapsed_time_months
      custom_sql_statement: |-
        select * from
        (select count(*) as n
          from data a
          where parse_date('%Y%m',  cast($ingestion_date_month as string)) >= date_sub(date_trunc(current_date(), month), interval $elapsed_time_months month) 
        )
        where n = 0
  NO_DELAYED_INGESTION_TIMESTAMP_LEVEL:
    rule_type: CUSTOM_SQL_STATEMENT
    params:
      custom_sql_arguments:
        - ingestion_timestamp
        - elapsed_time_hours
      custom_sql_statement: |-
        select * from
        (select count(*) as n
          from data a
          where $ingestion_timestamp >= timestamp_sub(current_timestamp(), interval $elapsed_time_hours hour) 
        )
        where n = 0
  NO_COMPLEX_RULES_MISMATCH:
    rule_type: CUSTOM_SQL_EXPR
    params:
      custom_sql_expr: |-
        (select
            sum(SaleLine.dItemTotalNetAmount) + sum(SaleLine.dVatAmount)
          from
            unnest(SaleLineList.SaleLine) as SaleLine
        ) between $column - 0.03 and $column + 0.03
  NO_DIFFERENT_VOLUMES_PER_SPECIFIC_PERIOD:
    rule_type: CUSTOM_SQL_STATEMENT
    params:
      custom_sql_arguments:
        - ts_column
        - as_at_ts
        - interval
        - threshold
      custom_sql_statement: |-
        select *
        from
          (select count(*) as n 
          from data
          where timestamp_trunc($ts_column, $interval) = timestamp_trunc(parse_timestamp("%F %T %Z", "$as_at_ts"), $interval)
          )
        where  n <= $threshold
